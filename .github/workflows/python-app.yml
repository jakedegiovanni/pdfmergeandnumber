# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#    - name: Test with pytest
#      run: |
#        pytest
    - name: Build Release - MacOS
      if: ${{ matrix.os == 'macos-latest' }}
      run: |
        pyinstaller --onefile --windowed --name pdfmergeandnumber-mac pdfmergeandnumber.py
        rm release/macos/*
        cp dist/pdfmergeandnumber-mac release/macos
    - name: Build Release - Windows
      if: ${{ matrix.os == 'windows-latest' }}
      run: |
        pyinstaller --onefile --windowed --name pdfmergeandnumber-win pdfmergeandnumber.py
        rm release/windows/*.exe
        cp dist/pdfmergeandnumber-win.exe release/windows
    - name: Commit and Push Release
      run: |
        git pull
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add -A
        git commit -m "Pushing up built binaries"
        git push
